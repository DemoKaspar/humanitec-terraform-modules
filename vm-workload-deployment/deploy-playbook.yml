---
- name: Deploy containerized workload on VMs
  hosts: vms
  become: yes
  tasks:
    - name: Ensure Docker is running
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Create application directory
      file:
        path: /opt/app
        state: directory
        mode: '0755'

    - name: Write docker-compose.yml
      copy:
        content: "{{ compose_file_content }}"
        dest: /opt/app/docker-compose.yml
        mode: '0644'

    - name: Pull latest images
      shell: |
        cd /opt/app
        docker-compose pull
      
    - name: Stop existing containers
      shell: |
        cd /opt/app
        docker-compose down || true

    - name: Start application containers
      shell: |
        cd /opt/app
        docker-compose up -d

    - name: Wait for application to be ready
      uri:
        url: "http://localhost:3000/health"
        method: GET
        status_code: 200
      register: health_check
      until: health_check.status == 200
      retries: 30
      delay: 10
      ignore_errors: yes

    - name: Show application status
      shell: |
        cd /opt/app
        docker-compose ps
      register: compose_status

    - name: Display deployment result
      debug:
        msg: |
          Deployment completed on {{ inventory_hostname }}
          Docker Compose Status:
          {{ compose_status.stdout }}
          Load Balancer IP: {{ loadbalancer_ip }}
          Application should be accessible at: http://{{ loadbalancer_ip }}